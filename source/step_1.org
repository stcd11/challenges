#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+BEGIN_COMMENT
#+STYLE: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+STYLE: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+END_COMMENT
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil 
#+TITLE: The Puzzle Boxes
#+AUTHOR: Stephen Brown and C. Delport

#+BEGIN_HTML
<div class=ribbon>
<a href="https://github.com/stcd11/challenges">Fork me on GitHub</a>
</div>
<center>
<img src='./img/puzzle1.jpg' width=33%>
</center>
#+END_HTML

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

e* Introduction
[[file:img/pic.jpg]]
:PROPERTIES:
:HTML_CONTAINER_CLASS: intro
:END:
** What are PIC chips?
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:
Peripheral Interface Controllers are small silicon chips which can be programmed to perform useful tasks.
In school, we tend to use Genie branded chips, like the C08 model you will use in this project. Others (e.g. PICAXE) are available.
PIC chips allow you connect different inputs (e.g. switches) and outputs (e.g. LEDs, motors and speakers), and to control them using flowcharts.
Chips such as these can be found everywhere in consumer electronic products, from toasters to cars. 

While they might not look like much, there is more computational power in a single PIC chip used in school than there was in the space shuttle that went to the moon in the 60's!
** When would I use a PIC chip?
Imagine you wanted to make a flashing bike light; using an LED and a switch alone, you'd need to manually push and release the button to get the flashing effect. A PIC chip could be programmed to turn the LED off and on once a second.
In a board game, you might want to have an electronic dice to roll numbers from 1 to 6 for you. 
In a car, a circuit is needed to ensure that the airbags only deploy when there is a sudden change in speed, AND the passenger is wearing their seatbelt, AND the front or rear bumper has been struck. PIC chips can carry out their instructions very quickly, performing around 1000 instructions per second - as such, they can react far more quickly than a person can. 
* Introduction
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
- Over the past year, you learned about electronics by making different projects that have been supplied to you. In this unit, you'll be equipped with diagnostic skills to further improve your ability to fix problems with circuits when they occur, to create and upload original programs to circuits and to create circuits without having to use the chemical etch tank. 
- If you want some additional help, try reading through [[./resources/multimeters.pdf][**this**]] short guide to using a multimeter.
** The puzzle boxes and Boards
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- There are 7 different circuit boards labelled A - G with faults on them in a clear acrylic box. There is also a component box with 3 different components to test and 4 different resistors to test, labelled A,B,C, 1, 2, 3 and 4. Inside the box are components, soldered to Machine screws (bolts with screwdriver heads). You will need to use the different settings on the multimeter as well as your ingenuity and knowledge of electronics to test the contents of each.
[[./img/BoardA.jpg]]
- The PCB's have a number of faults on them, here is a list of the possible faults you will find:

    1. Voltage regulator is the wrong way around.
    2. There is a dry joint (the solder does not go all the way around the component).
    3. A track has been lifted off the board.
    4. The 8-pin Chip carrier is the wrong way around.
    5. There is a short circuit (components that are not supposed to be joined are connected).
    6. There is an LED the wrong way around.
    7. Diode is the wrong way around.

- *Open a .txt (NotePad) file and record which board has which fault.*
- Now move onto the puzzle boxes below and record your findings in the *same .txt file*.

 **Box A:** An [[http://en.wikipedia.org/wiki/Photoresistor][LDR]]. LDRs typically have a resistance value from 400 to 2M (2 million) Ohms, depending on the amount they are exposed to: More light = less resistance.

	i. Read the resistance across the LDR, and write it down.
[[./img/LightLDR.jpg]]
	ii. Put your finger over the LDR and read the resistance again.
[[./img/DarkLDR.jpg]]
	

 **Box B:** The component in here is called a [[http://simple.wikipedia.org/wiki/Potentiometer][potentiometer]]. By turning the dial, the resistance between its 3 pins can be changed.

	i. What is the resistance between pins 1 and 3? 

	ii. Turn the dial to face pin 2. What is the resistance between pins 1 and 2? What is the resistance between 2 and 3? What number do you get when these values are added together? 

	iii. Turn the potentiometer wiper to the left and right notches marked near the dial and measure the resistance at each point.

 **Box C:** The green component is called a thermistor(Thermal Resistor). Its resistance changes in response to temperature. 	

    i. To test the component, you can put your finger on it and this will raise the temperature *slowly*. If you keep the meter on it, you should see the resistance change. 

 **Resistors** There are 4 resistors included in the box, use a multimeter to record the values of each resistor in the same text file you created.

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- To complete the badges you will need to click on the link at the bottom and complete the quiz. This will automatically badge your work.
- You will need to be logged into [[http://www.bournetolearn.com][www.bournetolearn.com]] to complete the badge.
- Click on this [[https://www.bournetolearn.com/quizzes/y8-challenges/Lesson_1/][link]]  Storage box quiz.
- **Please ensure you also upload the .txt(Notepad) document you have completed as evidence of your work.**


Below is how you will be awarded the badges.

- *Correctly* complete 3 of the 'board fault' tasks and 1 of the 'puzzle box' tests.
- *Correctly* complete 5 of the 'board fault' tasks and 2 of the 'puzzle box' tests.
- *Correctly* complete all of the 'board fault' tasks and all of the 'puzzle box' tests.


 [[./index.html][Return to homepage]]
 
